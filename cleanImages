#!/bin/bash

DOCKER_BIN=/usr/bin/docker
LOG_FILE=/var/log/docker-images-cleanup.log

rm /tmp/images_in_use.$$
echo "<---------- $(date) starting cleanup ---------->" >>$LOG_FILE

#get images in use
$DOCKER_BIN ps --no-trunc -a -q | while read containerId
do
  running=$($DOCKER_BIN inspect -f '{{.State.Running}}' $containerId )
  if [ "$running"x = "true"x ]
  then
    id=$($DOCKER_BIN inspect -f '{{.Image}}' $containerId )
    echo $id >>/tmp/images_in_use.$$
    continue
  fi 
  fini=$($DOCKER_BIN inspect -f '{{.State.FinishedAt}}' $containerId | awk -F. '{print $1}')
  diff=$(expr $(date +"%s") - $(date --date="$fini" +"%s"))

  #check if it's more than a day
  if [ $diff -gt 86400 ]
  then
     $DOCKER_BIN rm -v $containerId >>$LOG_FILE 2>&1
  fi 
done

#remove the unused images
$DOCKER_BIN images --no-trunc | grep -v REPOSITORY | while read each_line
do
  repo_tag=$(echo $each_line | awk '{print $1":"$2}')
  image_id=$(echo $each_line | awk '{print $3}')
  grep -q $image_id /tmp/images_in_use.$$
  if [ $? -eq 0 ]
  then
    continue
  fi
  if [ "$repo_tag"x = "<none>:<none>"x ]
  then
    $DOCKER_BIN rmi $image_id >>$LOG_FILE 2>&1
  else
    $DOCKER_BIN rmi $repo_tag >>$LOG_FILE 2>&1
  fi
done

rm /tmp/images_in_use.$$
echo "<---------- $(date) cleanup finished ---------->" >>$LOG_FILE
